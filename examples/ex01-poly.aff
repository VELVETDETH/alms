(* Polymorphic version: A Type-Correct, Blame-Free Program *)

module[A] ap : all '<a '<b. ('<a -o '<b) -> '<a -o '<b =
  \'<a '<b (f: '<a -o '<b) (x: '<a).
    f x

module[A] inc : int -> int =
  \y: int. ap[int,int] (\z:int. add z 1) y

in print[int] (inc 5)
