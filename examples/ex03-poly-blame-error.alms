(* Polymorphic version: A Blameworthy Coercion *)

let ap =
  fun 'a 'b (f: 'a -o 'b) (x: 'a) -> f x

let inc2 =
  fun y: int ->
    let g = (ap :> all 'a 'b. ('a -o 'b) -> 'a -> 'b)
            (fun z: int -> z + 1) in
      g (g y)   (* g is used twice here *)

in print (inc2 5)
