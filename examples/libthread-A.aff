(* "Single-threaded" threads *)


module AThread = struct[A]
  local
    (* down cast! *)
    let interface fork' :> (unit -o unit) -> {Thread.thread} = Thread.fork
  with
    abstype thread qualifier A = T of {Thread.thread} with
      let fork (thunk: (unit -o unit)) =
        T (fork' thunk)

      let kill (T th: thread) =
        Thread.kill th

      let delay = Thread.delay

      let print (T th: thread) =
        Thread.print th;
        T th
    end
  end
end
