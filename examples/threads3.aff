(* A bad example with threads.  (type error!) *)

let[A] printer : unit -> unit =
  let rec loop (_ : unit) : unit =
    threadDelay 100000;
    putStr "x";
    flush ();
    loop ()
  in loop

let[A] startStop : unit -> unit -o unit =
  \_: unit.
    let id = threadFork printer in
    let id = printThread id in
      \_: unit.
        threadKill id

let[A] after : int -> (unit -o unit) -> unit =
  \delay: int.
    \stop: unit -o unit.
      threadFork (\_:unit . threadDelay delay; stop ());
      ()

let[A] main : unit -> unit =
  \_: unit.
    let stop = startStop () in
      after 2000000 stop;
      getLine ();
      stop ()    (* stop used twice! *)

in main ()

