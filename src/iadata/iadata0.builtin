int
`a
`a
`a
`b
`a
`b
`a *  `a list
`a *  `a list
int -U> int -U> int
int -U> int -U> int
int -U> int -U> int
int -U> int -U> int
int -U> int -U> int
int -U> int
int -U> int
int -U> int -U> bool
int -U> string
string -U> int
unit -U> int
float -U> float -U> bool
float -U> float -U> bool
float -U> float -U> float
float -U> float -U> float
float -U> float -U> float
float -U> float -U> float
float -U> float -U> float
float -U> float
float -U> float
float -U> float
float -U> float
int -U> float
float -U> int
float -U> string
string -U> float
string -U> char list
char list -U> string
string -U> string -U> string
all 'a. 'a -U> string
string -U> int
all 'a. 'a -U> 'a -U> bool
all 'a. 'a -U> unit
char -U> unit
unit -U> char
unit -U> unit
string -U> unit
string -U> unit
unit -U> string
unit -U> string list
unit -U> string
string -U> string
unit -U> (string *  string) list
all `a. `a -U> `a ref
all `a. `a -U> `a aref
all 'a. 'a ref -U> 'a
all 'a. 'a aref -U> 'a aref *  'a
all `a. `a ref -U> `a -U> `a
all `a `b. `a aref -U> `b -A> `b aref *  `a
all `b `a. `a -U> `b
all `a. `a -U> `a *  `a
string -U> IO.ioMode -U> IO.handle
IO.handle -U> char
IO.handle -U> string
IO.handle -U> bool
IO.handle -U> char -U> unit
IO.handle -U> string -U> unit
IO.handle -U> unit
IO.handle -U> unit
IO.handle
IO.handle
IO.handle
all 'a. unit -U> 'a Channel.channel
all 'a. 'a Channel.channel -U> 'a -U> unit
all 'a. 'a Channel.channel -U> 'a
(unit -U> unit) -U> Thread.thread
Thread.thread -U> unit
int -U> unit
Thread.thread -U> Thread.thread
all `a. `a -U> `a MVar.mvar
all `a. unit -U> `a MVar.mvar
all `a. `a MVar.mvar -U> `a
all `a. `a MVar.mvar -U> `a -U> unit
all 'a. 'a MVar.mvar -U> 'a
all `a. `a MVar.mvar -U> `a -U> `a
all `a. `a MVar.mvar -U> `a option
all `a. `a MVar.mvar -U> `a -U> bool
all `a. `a MVar.mvar -U> bool
all `a `b. `a MVar.mvar -U> (`a -U> `b) -U> `b
all `a. `a MVar.mvar -U> (`a -U> `a) -U> unit
all `a `b. `a MVar.mvar -U> (`a -U> `a *  `b) -U> `b
all `a. (unit -A> `a) -U> `a Future.future
all `a. `a Future.future -U> `a
all `a. (`a Future.future -A> unit) -U> `a Future.cofuture
all `a. `a Future.cofuture -U> `a -A> unit
all `a. unit -U> `a Future.future *  `a Future.cofuture
int
int
int
int
int *  int *  int *  int
int
Prim.Socket.portNumber *  Prim.Socket.hostAddress
Prim.Socket.portNumber *  Prim.Socket.flowInfo *  Prim.Socket.hostAddress6 *  Prim.Socket.scopeID
string
Prim.Socket.addrInfoFlag list *  Prim.Socket.family *  Prim.Socket.socketType *  Prim.Socket.protocolNumber *  Prim.Socket.sockAddr *  string option
string
string
Prim.Socket.hostAddress
Prim.Socket.protocolNumber
Prim.Socket.addrInfo
Prim.Socket.addrInfo option -U> Prim.Socket.hostName option -U> Prim.Socket.serviceName option -U> Prim.Socket.addrInfo list
string -U> Prim.Socket.hostAddress
Prim.Socket.family -U> Prim.Socket.socketType -U> Prim.Socket.protocolNumber -U> Prim.Socket.socket
Prim.Socket.socket -U> Prim.Socket.sockAddr -U> unit
Prim.Socket.socket -U> Prim.Socket.sockAddr -U> unit
Prim.Socket.socket -U> int -U> unit
Prim.Socket.socket -U> Prim.Socket.socket *  Prim.Socket.sockAddr
Prim.Socket.socket -U> string -U> int
Prim.Socket.socket -U> int -U> string
Prim.Socket.socket -U> Prim.Socket.shutdownCmd -U> unit
Prim.Socket.socket -U> unit
Prim.Socket.socket -U> bool
Prim.Socket.socket -U> bool
all `a. exn -U> `a
all `a. (unit -A> `a) -U> exn +  string +  `a
all `a. int -U> (int -U> `a) -U> `a Prim.Array.array
all `a. `a Prim.Array.array -U> int
all `a. `a Prim.Array.array -U> int -U> `a -U> `a
all 'a. 'a Prim.Array.array -U> int -U> 'a
Alms, version 0.0.0-dev
